// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// run_tsne
Rcpp::NumericMatrix run_tsne(Rcpp::IntegerMatrix indices, Rcpp::NumericMatrix distances, Rcpp::NumericMatrix init, int iter, int max_depth, int lie_iter, int mom_iter, bool leaf_approx, int num_threads);
RcppExport SEXP _qdtsne_run_tsne(SEXP indicesSEXP, SEXP distancesSEXP, SEXP initSEXP, SEXP iterSEXP, SEXP max_depthSEXP, SEXP lie_iterSEXP, SEXP mom_iterSEXP, SEXP leaf_approxSEXP, SEXP num_threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type indices(indicesSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type distances(distancesSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type init(initSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type max_depth(max_depthSEXP);
    Rcpp::traits::input_parameter< int >::type lie_iter(lie_iterSEXP);
    Rcpp::traits::input_parameter< int >::type mom_iter(mom_iterSEXP);
    Rcpp::traits::input_parameter< bool >::type leaf_approx(leaf_approxSEXP);
    Rcpp::traits::input_parameter< int >::type num_threads(num_threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(run_tsne(indices, distances, init, iter, max_depth, lie_iter, mom_iter, leaf_approx, num_threads));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_qdtsne_run_tsne", (DL_FUNC) &_qdtsne_run_tsne, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_qdtsne(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
